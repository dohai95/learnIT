using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Diagnostics;
using System.Threading;
using System.Runtime.InteropServices;


namespace WindowsFormsApp7
{
    public partial class Form4 : Form
    {
        private Bitmap thicknessMap; // Bitmap for the thickness map
        //public bool FormLoaded=false;
        public Form4()
        {
            InitializeComponent();
           
        }
        [System.Runtime.InteropServices.DllImport("user32.dll")]
        static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
        private const int SW_MAXIMIZE = 3;
        [System.Runtime.InteropServices.DllImport("user32.dll")]
        static extern IntPtr SetParent(IntPtr hWnd,IntPtr hWndNewParent);

        [DllImport("user32.dll", EntryPoint = "SetWindowLong")]
        static extern int SetWindowLong(IntPtr hWnd, int nIndex, int dwNewLong);

        [DllImport("user32.dll", EntryPoint = "GetWindowLong")]
        static extern int GetWindowLong(IntPtr hWnd, int nIndex);

        private const int GWL_STYLE = -16;
        private const int WS_CAPTION = 0x00C00000;

        ProcessStartInfo psi;
        Process process;
        bool FormLoaded = false;

        private void button1_Click(object sender, EventArgs e)
        {
            ////MessageBox.Show(1000000.ToString("X8"));
            //string s = 1000000.ToString("X8");

            //int a=Convert.ToInt32(s.Substring(0,4),16);
            //int b=Convert.ToInt32(s.Substring(4,4),16);

            //int c   = Convert.ToInt32("0010C8E0",16);
            string sScript= @"C:\Users\hai\Desktop\TestPy\contour2d.py";
            Test(sScript,this.tabPage1.Handle);

        }
        public void Test(string sScript,IntPtr parent)
        {
            string pythonPath = @"C:\Users\hai\AppData\Local\Programs\Python\Python38\python.exe";  // Path to your Python executable
            string scriptPath = sScript;// @"C:\Users\hai\Desktop\TestPy\contour2d.py"; // Path to your Python script
           
            // Create a new process start info
            psi = new ProcessStartInfo(pythonPath);
            psi.Arguments = scriptPath;

            psi.CreateNoWindow = true;
            psi.WindowStyle = ProcessWindowStyle.Hidden;


            // Redirect the output to read the result
            psi.RedirectStandardOutput = true;
            psi.UseShellExecute = false;

            // Create and start the process
            process = new Process();
            process.StartInfo = psi;
            //process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
            process.Start();
           
            //process.WaitForInputIdle();
            while (process.MainWindowHandle == IntPtr.Zero)
            {
                Thread.Sleep(10);
                process.Refresh();
            }
            Invoke(new Action(() => SetParent(process.MainWindowHandle, parent)));
            
            ShowWindow(process.MainWindowHandle, SW_MAXIMIZE);
            SetWindowLong(process.MainWindowHandle, GWL_STYLE, GetWindowLong(process.MainWindowHandle, GWL_STYLE) & ~WS_CAPTION);
        }
        private Color GetColorFromNormalizedValue(double normalizedValue)
        {
            // You can customize the color mapping based on your requirements
            int red = (int)(255 * normalizedValue);
            int green = 255 - red;
            int blue = 0;
            return Color.FromArgb(red, green, blue);
        }

        private void button2_Click(object sender, EventArgs e)
        {
            string sScript = @"C:\Users\hai\Desktop\TestPy\contour3d.py";
            Test(sScript, this.tabPage1.Handle);

        }

        private void Form4_SizeChanged(object sender, EventArgs e)
        {
            //if (process != null && !process.HasExited)
            //{
            //    if (this.WindowState == FormWindowState.Normal)
            //    {
            //        ShowWindow(process.MainWindowHandle, 3);
            //    }
            //    else if(this.WindowState == FormWindowState.Maximized)
            //    {
            //        ShowWindow(process.MainWindowHandle, 3);
            //    }
                
            //}
        }

        private  void Form4_Load(object sender, EventArgs e)
        {
            ////Test();
           
            //Action action = () =>
            //{
            //    while (true)
            //    {
            //        if (FormLoaded == true)
            //        {
            //            Thread.Sleep(200);
            //            Test();
            //            break;
            //            //FormLoaded = false;
            //        }


            //    }

            //};
            
            //Task task = new Task(action);
            //task.Start();
            ////Test();
            //FormLoaded = true;

        }

        private void button3_Click(object sender, EventArgs e)
        {
            
        }
    }
}
